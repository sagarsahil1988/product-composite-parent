#API Documentation Specific properties
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs.path: /v3/api-docs
  packagesToScan: com.techpractice.product_composite_service
  pathsToMatch: /**

api:
  common:
    title: Product Details API
    description: API that provide information for Product, their reviews and recommendations.
    version: 1.0.0
    termsOfService: My terms of service.
    contact:
      name: Contact Name
      url: My contact url
      email: mw@email.com
    license: License
    licenseUrl: LicenseUrl
    external:
      doc:
        description: External Documentation Description
        url: External Doc url

  product-composite:
    get-composite-product:
      description: Returns a composite view of the specified product id.
      notes: |
        # Normal response
        If the requested product id is found the method will return information regarding:
        1. Base product information
        1. Reviews
        1. Recommendations
        1. Service Addresses\n(technical information regarding the addresses of the microservices that created the response)
        
        # Expected partial and error responses
        In the following cases, only a partial response be created (used to simplify testing of error conditions)
        
        ## Product id 113
        200 - Ok, but no recommendations will be returned
        
        ## Product id 213
        200 - Ok, but no reviews will be returned
        
        ## Non numerical product id
        400 - A <b>Bad Request</b> error will be returned
        
        ## Product id 13
        404 - A <b>Not Found</b> error will be returned
        
        ## Negative product ids
        422 - An <b>Un-processable Entity</b> error will be returned
  

server:
  port: 7004
logging:
  level:
    root: INFO
app:
  product-service:
    host: localhost
    port: 7001
  recommendation-service:
    host: localhost
    port: 7002
  review-service:
    host: localhost
    port: 7003

---

spring:
  config:
    activate:
      on-profile: docker
server:
  port: 8080

app:
  product-service:
    host: product
    port: 8080
  recommendation-service:
    host: recommendation
    port: 8080
  review-service:
    host: review
    port: 8080